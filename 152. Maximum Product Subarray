class Solution {
    public int maxProduct(int[] nums) {
    //     int dp[][]=new int[nums.length][nums.length];
    //     int ans=Integer.MIN_VALUE;
    //     for(int g=0;g<nums.length;g++){
    //       for(int i=0,j=g;j<dp[0].length;i++,j++){
    //           if(g==0){
    //               dp[i][j]=nums[j];
    //           }
    //           else if(g==1){
    //               dp[i][j]=nums[i]*nums[j];
    //           }else{
    //              dp[i][j]=dp[i+1][j-1]*nums[i]*nums[j];
                     
    //              }
    //          if(dp[i][j]>ans) ans=dp[i][j] ;
    //           }
    //          // if(dp[i][j]>ans) ans=dp[i][j] ;
    //       }
      
    //   return ans;
      if (nums == null || nums.length == 0) {
            return 0;
        }

        int maxProduct = nums[0];
        int minProduct = nums[0];
        int result = nums[0];

        for (int i = 1; i < nums.length; i++) {
            if (nums[i] < 0) {
                int temp = maxProduct;
                maxProduct = minProduct;
                minProduct = temp;
            }

            maxProduct = Math.max(nums[i], maxProduct * nums[i]);
            minProduct = Math.min(nums[i], minProduct * nums[i]);

            result = Math.max(result, maxProduct);
        }

        return result;
    }
    }
